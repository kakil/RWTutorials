//
//  PaintCodeTutorial.m
//  PaintCodeTutorial
//
//  Created by Kitwana Akil on 4/11/16.
//  Copyright (c) 2016 AkilDev LLC. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//

#import "PaintCodeTutorial.h"


@implementation PaintCodeTutorial

#pragma mark Cache

static UIColor* _baseColor = nil;

#pragma mark Initialization

+ (void)initialize
{
    // Colors Initialization
    _baseColor = [UIColor colorWithRed: 0.067 green: 0.553 blue: 0.855 alpha: 1];

}

#pragma mark Colors

+ (UIColor*)baseColor { return _baseColor; }

#pragma mark Drawing Methods

+ (void)drawStopwatch
{

    //// Oval Drawing
    UIBezierPath* ovalPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(15, 30, 220, 220)];
    [PaintCodeTutorial.baseColor setFill];
    [ovalPath fill];


    //// Rectangle Drawing
    UIBezierPath* rectanglePath = [UIBezierPath bezierPathWithRect: CGRectMake(114, 2, 22, 34)];
    [PaintCodeTutorial.baseColor setFill];
    [rectanglePath fill];


    //// Bezier Drawing
    UIBezierPath* bezierPath = [UIBezierPath bezierPath];
    [bezierPath moveToPoint: CGPointMake(214.14, 30)];
    [bezierPath addLineToPoint: CGPointMake(235.36, 51.21)];
    [bezierPath addLineToPoint: CGPointMake(221.21, 65.35)];
    [bezierPath addCurveToPoint: CGPointMake(215.21, 59.35) controlPoint1: CGPointMake(221.21, 65.35) controlPoint2: CGPointMake(218.6, 62.74)];
    [bezierPath addLineToPoint: CGPointMake(206, 59.35)];
    [bezierPath addCurveToPoint: CGPointMake(206, 50.14) controlPoint1: CGPointMake(206, 59.35) controlPoint2: CGPointMake(206, 52.5)];
    [bezierPath addCurveToPoint: CGPointMake(200, 44.14) controlPoint1: CGPointMake(202.61, 46.75) controlPoint2: CGPointMake(200, 44.14)];
    [bezierPath addLineToPoint: CGPointMake(214.14, 30)];
    [bezierPath closePath];
    [PaintCodeTutorial.baseColor setFill];
    [bezierPath fill];
}

+ (void)drawStopwatch_Hand
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();

    //// Oval Drawing
    UIBezierPath* ovalPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(426, 99, 30, 30)];
    [UIColor.whiteColor setFill];
    [ovalPath fill];


    //// Bezier 2 Drawing
    CGContextSaveGState(context);
    CGContextTranslateCTM(context, 125, 110);

    UIBezierPath* bezier2Path = [UIBezierPath bezierPath];
    [bezier2Path moveToPoint: CGPointMake(4, -87)];
    [bezier2Path addCurveToPoint: CGPointMake(4, -14.46) controlPoint1: CGPointMake(4, -87) controlPoint2: CGPointMake(4, -47.23)];
    [bezier2Path addCurveToPoint: CGPointMake(15, 0) controlPoint1: CGPointMake(10.34, -12.71) controlPoint2: CGPointMake(15, -6.9)];
    [bezier2Path addCurveToPoint: CGPointMake(4, 14.46) controlPoint1: CGPointMake(15, 6.9) controlPoint2: CGPointMake(10.34, 12.71)];
    [bezier2Path addCurveToPoint: CGPointMake(4, 28) controlPoint1: CGPointMake(4, 22.74) controlPoint2: CGPointMake(4, 28)];
    [bezier2Path addLineToPoint: CGPointMake(-4, 28)];
    [bezier2Path addCurveToPoint: CGPointMake(-4, 14.46) controlPoint1: CGPointMake(-4, 28) controlPoint2: CGPointMake(-4, 22.74)];
    [bezier2Path addCurveToPoint: CGPointMake(-15, 0) controlPoint1: CGPointMake(-10.34, 12.71) controlPoint2: CGPointMake(-15, 6.9)];
    [bezier2Path addCurveToPoint: CGPointMake(-4, -14.46) controlPoint1: CGPointMake(-15, -6.9) controlPoint2: CGPointMake(-10.34, -12.71)];
    [bezier2Path addCurveToPoint: CGPointMake(-4, -87) controlPoint1: CGPointMake(-4, -47.23) controlPoint2: CGPointMake(-4, -87)];
    [bezier2Path addLineToPoint: CGPointMake(4, -87)];
    [bezier2Path addLineToPoint: CGPointMake(4, -87)];
    [bezier2Path closePath];
    [UIColor.whiteColor setFill];
    [bezier2Path fill];

    CGContextRestoreGState(context);
}

@end
