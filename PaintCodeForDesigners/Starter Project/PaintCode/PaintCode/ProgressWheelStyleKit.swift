//
//  ProgressWheelStyleKit.swift
//  ProjectName
//
//  Created by Kitwana Akil on 4/12/16.
//  Copyright (c) 2016 ITEL. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//



import UIKit

public class ProgressWheelStyleKit : NSObject {

    //// Cache

    private struct Cache {
        static let baseColor: UIColor = UIColor(red: 0.784, green: 0.757, blue: 0.757, alpha: 1.000)
        static let color2: UIColor = UIColor(red: 0.706, green: 0.706, blue: 0.859, alpha: 1.000)
    }

    //// Colors

    public class var baseColor: UIColor { return Cache.baseColor }
    public class var color2: UIColor { return Cache.color2 }

    //// Drawing Methods

    public class func drawCanvas1(progress progress: CGFloat = 0) {
        //// General Declarations
        let context = UIGraphicsGetCurrentContext()


        //// Variable Declarations
        let resultAngle: CGFloat = -360 * progress
        let percent: CGFloat = progress * 100
        let expression = "\(Int(round(percent)))" + "%"

        //// Group
        //// Oval Drawing
        let ovalPath = UIBezierPath(ovalInRect: CGRect(x: 15.5, y: 14.5, width: 120, height: 120))
        ProgressWheelStyleKit.baseColor.setStroke()
        ovalPath.lineWidth = 5
        ovalPath.stroke()


        //// Oval 2 Drawing
        let oval2Rect = CGRect(x: 15.5, y: 14.5, width: 120, height: 120)
        let oval2Path = UIBezierPath()
        oval2Path.addArcWithCenter(CGPoint(x: oval2Rect.midX, y: oval2Rect.midY), radius: oval2Rect.width / 2, startAngle: -90 * CGFloat(M_PI)/180, endAngle: -(resultAngle + 89) * CGFloat(M_PI)/180, clockwise: true)

        ProgressWheelStyleKit.color2.setStroke()
        oval2Path.lineWidth = 5
        oval2Path.stroke()


        //// Text Drawing
        let textRect = CGRect(x: 33, y: 40, width: 90, height: 55)
        let textStyle = NSMutableParagraphStyle()
        textStyle.alignment = .Center

        let textFontAttributes = [NSFontAttributeName: UIFont.systemFontOfSize(24), NSForegroundColorAttributeName: UIColor.blackColor(), NSParagraphStyleAttributeName: textStyle]

        let textTextHeight: CGFloat = NSString(string: expression).boundingRectWithSize(CGSize(width: textRect.width, height: CGFloat.infinity), options: NSStringDrawingOptions.UsesLineFragmentOrigin, attributes: textFontAttributes, context: nil).size.height
        CGContextSaveGState(context)
        CGContextClipToRect(context, textRect)
        NSString(string: expression).drawInRect(CGRect(x: textRect.minX, y: textRect.minY + (textRect.height - textTextHeight) / 2, width: textRect.width, height: textTextHeight), withAttributes: textFontAttributes)
        CGContextRestoreGState(context)
    }

}
